services:
  database:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  nginx:
    image: nginx:1.27.4-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      DOMAIN: ${DOMAIN}
      PROXY_PASS: 'omegaauctionen:3000'
    depends_on:
      - omegaauctionen
      - vipps
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/nginx/default.conf:/etc/nginx/templates/default.conf.template:ro
      - ./certs/conf:/etc/letsencrypt:ro
      - ./certs/www/:/var/www/certbot:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certs/www:/var/www:rw
      - ./certs/conf:/etc/letsencrypt:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 14d & wait $${!}; done;'"
    restart: always
  omegaauctionen:
    build: .
    environment:
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GITHUB_SECRET: ${GITHUB_SECRET}
      GITHUB_ID: ${GITHUB_ID}
      FEIDE_CLIENT_ID: ${FEIDE_CLIENT_ID}
      FEIDE_CLIENT_SECRET: ${FEIDE_CLIENT_SECRET}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DATABASE_URL: ${DATABASE_URL}
      NEXT_PUBLIC_PICTURE_SERVER_URL: ${NEXT_PUBLIC_PICTURE_SERVER_URL}
      NEXT_PUBLIC_OBJECTS_PER_PAGE: ${NEXT_PUBLIC_OBJECTS_PER_PAGE}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
    depends_on:
      - database
  vipps:
    build: ./services/vipps
    ports:
      - 8000:8000
  picture_server:
    build: ./services/picture_server
      # context: ./services/picture_server/
      # dockerfile: ./services/picture_server/Dockerfile
    ports:
      - 5000:5000
    volumes:
      - ./services/picture_server/uploads:/usr/src/app/uploads
