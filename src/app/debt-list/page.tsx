"use client";

import { useEffect, useState } from "react";
import generateDebtReport from "./generateDebtList";
import style from "./page.module.scss"

export default function DownloadAuctionData() {
    const [auctionData, setAuctionData] = useState<null | string[]>(null);


    useEffect(() => {
        async function compile() {
            const compileResponse = await generateDebtReport()
            if (!compileResponse) {
                alert("noe gikk galt eller du har ikke tilgang")
                return;
            }
            setAuctionData(compileResponse)
        }
        compile()
    }, [])

    const downloadDebtFile = () => {
        let blob;
        if (!auctionData) {
            blob = new Blob(["feil: kontakt vevcom eller prøv igjen"], { type: "text/plain" });
        }
        else {
            blob = new Blob([auctionData[0]], { type: "text/plain" });
        }
        const url = URL.createObjectURL(blob);

        const a = document.createElement("a");
        a.href = url;
        a.download = "fullstendigOversik.txt";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    };

    const downloadOverviewListFile = ()=>{
        let blob;
        if (!auctionData) {
            blob = new Blob(["feil: kontakt vevcom eller prøv igjen"], { type: "text/csv" });
        }
        else {
            blob = new Blob([auctionData[1]], { type: "text/csv" });
        }
        const url = URL.createObjectURL(blob);

        const a = document.createElement("a");
        a.href = url;
        a.download = "sjekkListe.csv";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    };
    const downloadAutoGeneratedMailFile = ()=>{
        let blob;
        if (!auctionData) {
            blob = new Blob(["feil: kontakt vevcom eller prøv igjen"], { type: "text/csv" });
        }
        else {
            blob = new Blob([auctionData[2]], { type: "text/csv" });
        }
        const url = URL.createObjectURL(blob);

        const a = document.createElement("a");
        a.href = url;
        a.download = "mail_liste.csv";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    };

    if (!auctionData) {
        return <p>Komplimerer data. Dette kan ta en stund...</p>
    }
    return (
        <div className="flex flex-col items-center gap-4 p-4">
            <button
                onClick={downloadDebtFile}
                className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700"
            >
                Last ned fullstendig liste over hva som må betales
            </button>
            <button
                onClick={downloadOverviewListFile}
                className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700"
            >
                Last ned liste for betaling oversikt
            </button>
            <button
                onClick={downloadAutoGeneratedMailFile}
                className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700"
            >
                Last ned auto generert mail
            </button>
            <div className={style.reportDiv}>
                {auctionData[0].split("\n").map((text) => (
                    <div>
                        {text.includes("\t")
                            ?
                            <p> &emsp; {text}</p> :
                            <p>{text}</p>
                        }
                        <br></br>
                    </div>
                ))}
            </div>
        </div>
    );
}
